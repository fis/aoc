  jp solve

include 'read_line.z80'
include 'write_u16.z80'

solve:

  ld bc, 0
.loop:

  ld hl, .line
  call read_line

  ld a, (.line)
  or a
  jr nz, .not_eof
  push bc
  pop hl
  call write_u16
  ld a, '\n'
  out (1), a
  halt

.not_eof:

  ld hl, .line
  ld de, 0
.next_char:

  ld a, (hl)
  or a
  jr z, .accumulate

  ;; sub '0'
  ;; jr c, .char_done
  ;; cp 10
  ;; jr nc, .char_done
  call get_digit
  or a
  jr z, .char_done
  ld e, a
  ld a, d
  or a
  jr nz, .char_done
  ld d, e

.char_done:
  inc hl
  jr .next_char

.accumulate:
  sla d
  ld a, d
  sla d
  sla d
  add a, d
  add a, e
  ld l, a
  ld h, 0
  add hl, bc
  push hl
  pop bc
  jr .loop

.line: equ 0x8000

get_digit:  ; TODO: doc
  cp '0'
  jr nc, .maybe_digit
  ld a, 0
  ret
.maybe_digit:
  cp '9'+1
  jr nc, .maybe_word
  sub '0'
  ret
.maybe_word:
  push hl
  exx
  ld iy, wordlist
.next_word:
  ld a, (iy+0)
  ld e, a
  ld d, (iy+1)
  or d
  jr nz, .more_words
  exx
  pop hl
  ld a, 0
  ret
.more_words:
  pop hl
  push hl
  call is_prefix
  jr z, .word_found
  inc iy
  inc iy
  jr .next_word
.word_found:
  exx
  pop hl
  ld a, iyl
  srl a
  and 0x0f
  ret

;;; is_prefix - test if one string is a prefix of another
;;;  in: DE: the prefix
;;;      HL: the string to look for the prefix in
;;; out: DE, HL: moved further in the string
;;;      zero flag: set if result is true
;;; use: A
is_prefix:
  ld a, (de)
  or a
  jr nz, .test_more
  ret
.test_more:
  inc de
  cpi
  jr z, is_prefix
  ret

  defs (32-($&0x1f)+2)&0x1f  ; align so that ((&wordlist[N] >> 1) & 0x0f) == N
wordlist:
  defw .word1, .word2, .word3, .word4, .word5
  defw .word6, .word7, .word8, .word9, 0
.word1: defb "one", 0
.word2: defb "two", 0
.word3: defb "three", 0
.word4: defb "four", 0
.word5: defb "five", 0
.word6: defb "six", 0
.word7: defb "seven", 0
.word8: defb "eight", 0
.word9: defb "nine", 0
